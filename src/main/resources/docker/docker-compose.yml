version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: postgres_order
    restart: always
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    networks:
      - order_network

  redis:
    image: redis:latest
    container_name: redis_order
    restart: always
    ports:
      - "6379:6379"
    networks:
      - order_network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper_order
    restart: always
    ports:
      - "2181:2181"
    networks:
      - order_network

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka_order
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - order_network

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop_order
    restart: always
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    ports:
      - "9000:9000"
    networks:
      - order_network

  adminer:
    image: adminer
    container_name: adminer_order
    restart: always
    ports:
      - "8081:8080"
    networks:
      - order_network

networks:
  order_network:
    driver: bridge
